name: Update vendored streamrip

on:
  schedule:
    - cron: "23 3 * * *"   # daily at 03:23 UTC
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  bump:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Add upstream remote
        run: |
          git remote add streamrip-upstream https://github.com/nathom/streamrip.git || true
          git fetch streamrip-upstream --tags

      - name: Determine latest tag
        id: tags
        run: |
          LATEST_TAG=$(git ls-remote --tags --sort='v:refname' streamrip-upstream | awk '{print $2}' | sed 's|refs/tags/||;s|\^{}||' | grep -E '^v?[0-9]+\.[0-9]+\.[0-9]+$' | tail -n1)
          echo "latest=$LATEST_TAG" >> "$GITHUB_OUTPUT"

      - name: Current vendored version
        id: cur
        run: |
          if [ -f streamrip/streamrip/__init__.py ]; then
            CUR=$(grep -Po "__version__\s*=\s*['\"]\K[^'\"]+" streamrip/streamrip/__init__.py || true)
          else
            CUR=""
          fi
          echo "cur=$CUR" >> "$GITHUB_OUTPUT"

      - name: Check up-to-date
        id: check
        env:
          LATEST: ${{ steps.tags.outputs.latest }}
          CUR: ${{ steps.cur.outputs.cur }}
        run: |
          echo "Latest tag: $LATEST"
          echo "Current:    $CUR"
          if [ -n "$LATEST" ] && [ "$LATEST" = "$CUR" ]; then
            echo "uptodate=true"  >> "$GITHUB_OUTPUT"
          else
            echo "uptodate=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Create update branch
        if: ${{ steps.check.outputs.uptodate == 'false' }}
        run: |
          BR="chore/update-streamrip-${{ steps.tags.outputs.latest }}"
          git checkout -b "$BR"

      - name: Pull subtree to latest tag
        if: ${{ steps.check.outputs.uptodate == 'false' }}
        run: |
          git subtree pull --prefix=streamrip streamrip-upstream "${{ steps.tags.outputs.latest }}" --squash || true

      - name: Commit (if changed)
        id: commit
        if: ${{ steps.check.outputs.uptodate == 'false' }}
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git add -A
            git commit -m "chore: bump vendored streamrip to ${{ steps.tags.outputs.latest }}"
            echo "changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "changed=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Create PR
        if: ${{ steps.check.outputs.uptodate == 'false' && steps.commit.outputs.changed == 'true' }}
        uses: peter-evans/create-pull-request@v6
        with:
          branch: "chore/update-streamrip-${{ steps.tags.outputs.latest }}"
          title: "chore: bump vendored streamrip to ${{ steps.tags.outputs.latest }}"
          body: "Automated update to the latest upstream release."
          commit-message: "chore: bump vendored streamrip to ${{ steps.tags.outputs.latest }}"
          labels: "automation, dependencies"
          signoff: false
          delete-branch: true
